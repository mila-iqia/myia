"""Abstract data and type/shape inference."""

from .aliasing import (  # noqa
    find_aliases,
    generate_getters,
    ndarray_aliasable,
    setter_from_getter,
)
from .data import (  # noqa
    ABSENT,
    ALIASID,
    ANYTHING,
    DATA,
    DEAD,
    POLY,
    SHAPE,
    TYPE,
    VALUE,
    VOID,
    AbstractADT,
    AbstractArray,
    AbstractBottom,
    AbstractClass,
    AbstractClassBase,
    AbstractDict,
    AbstractError,
    AbstractExternal,
    AbstractFunction,
    AbstractJTagged,
    AbstractKeywordArgument,
    AbstractScalar,
    AbstractTaggedUnion,
    AbstractTuple,
    AbstractType,
    AbstractUnion,
    AbstractValue,
    DummyFunction,
    GraphFunction,
    JTransformedFunction,
    Macro,
    MetaGraphFunction,
    MyiaStatic,
    PartialApplication,
    Possibilities,
    PrimitiveFunction,
    TaggedPossibilities,
    Track,
    TrackDict,
    TypedPrimitive,
    VirtualFunction,
    empty,
    format_abstract,
    listof,
    macro,
    myia_static,
    pretty_struct,
    pretty_type,
)
from .infer import (  # noqa
    GraphInferrer,
    InferenceEngine,
    Inferrer,
    TrackedInferrer,
    from_value,
    to_abstract,
)
from .loop import (  # noqa
    InferenceLoop,
    Pending,
    PendingFromList,
    PendingTentative,
    find_coherent_result,
    find_coherent_result_sync,
    force_pending,
)
from .prim import abstract_inferrer_constructors  # noqa
from .ref import (  # noqa
    CONTEXTLESS,
    AbstractReference,
    Context,
    Contextless,
    EvaluationCache,
    Reference,
    VirtualReference,
)
from .utils import (  # noqa
    abstract_check,
    abstract_clone,
    amerge,
    bind,
    broaden,
    build_value,
    concretize_abstract,
    force_through,
    hastype_helper,
    sensitivity_transform,
    split_type,
    type_to_abstract,
    type_token,
    typecheck,
    union_simplify,
)
