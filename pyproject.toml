[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poetry]
name = "myia"
version = "0.0.0"
description = "A linear algebra compiler for a subset of Python"
authors = ["Mila development team"]
license = "MIT"
readme = "README.rst"
repository = "https://github.com/mila-iqia/myia"

[tool.poetry.dependencies]
python = "~3.7"
asttokens = "^2.0.3"
colorama = "^0.4.3"
numpy = "^1.16"
opt_einsum = "^3.1.0"
prettyprinter = "^0.18.0"
antlr4-python3-runtime = { version = "4.7.2", optional = true }
torch = { version = "1.5.0", optional = true }
torchvision = { version = "0.6.0", optional = true }

[tool.poetry.extras]
pytorch = ["torch", "torchvision"]

# versions for these are managed by {gpu,cpu}-extras.conda
gpu = []
#gpu = ["cudatoolkit", "cudnn"]
cpu = []
#cpu = ["cpuonly"]

[tool.poetry.dev-dependencies]
black = "~19.10b0"
docopt = "~0.6.2"
flake8 = "~3.7.7"
isort = "~4.3.21"
pydocstyle = "5.0.1"
pytest = "~5.4.1"
pytest-cov = "~2.8.1"
sphinx = "~2.4.4"
gym = "~0.17.1"
pillow = "<7"

[tool.poetry2conda]
name = "myia"

[tool.poetry2conda.dependencies]
torch = { channel = "pytorch", name = "pytorch" }
torchvision = { channel = "pytorch" }
asttokens = { channel = "pip" }
prettyprinter = { channel = "pip" }
antlr4-python3-runtime = { channel = "pip" }
black = { channel = "pip" }
codecov = { channel = "pip" }
pydocstyle = { channel = "pip" }
gym = { channel = "pip" }

[tool.black]
line-length = 80

[tool.isort]
known_first_party = "myia,debug"
known_third_party = "torch,torchvision,tvm,hrepr,buche,breakword,docopt,gym"
multi_line_output = 3
include_trailing_comma = true
combine_as_imports = true

[tool.coverage.run]
omit = [
    "conftest.py",
    "setup.py",
    "tests/*",
    "debug/*",
    "myia/debug/*",
    "examples/*",
]

[tool.coverage.report]
exclude_lines = [
    "@pyoverload",
    "@abstractmethod",
    "@compile",
    "@core",
    "@wrap_grad_transform",
    "@bprop_to_grad_transform",
    "pragma: no cover",
    "AssertionError",
    "NotImplementedError",
    "untested_legacy",
]
